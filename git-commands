## Content

### What's the difference between push, pull, and fetch?

- `git push` - sends changes from your local branch to a remote repository
- `git fetch` - sends changes from a remote repository into your tracking branch
- `git pull` - sends changes from a remote branch into your tracking branch and merges them into your local branch

Git users often think that `git push` and `git pull` are equivalent. However, this is not exactly correct: `git pull` contains two actions, whereas `git push` contains one action. The command `git push` checks whether your current branch connects to a tracking branch for a remote repository. If it does, your current branch's changes are pushed to the remote branch. This is how code is shared with a remote repository. 

If, however, the remote branch has diverged from your local branch, `git push` will fail. When this happens, you need to align your local branch with the remote branch. Either run `git pull` alone, or run `git fetch` and then `git merge`. Again,`git fetch` checks whether your current branch connects to a tracking branch. If it does, it looks for changes in the remote branch and pulls them into the tracking branch. It does not, however, update your local branch. To update your local branch, run `git merge origin/master`. If you run `git pull`, it will run `git fetch` and also `git merge`. `git pull` combines two actions into one command, which is sometimes preferable; but, some may prefer to run `git fetch` and then `git merge`, separately, to ensure that they see the changes before merging.

