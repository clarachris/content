## Content

### What is the difference between push, pull, and fetch?

- `git push` - send changes from a local branch to a remote repo
- `git fetch` - get changes from a remote repo into your tracking branch
- `git pull` - get changes from a remote branch into your tracking branch and merge them into a local branch

The commands `git push` and `git pull` are often thought of as the same. This, however, isn't correct; `git push` does two things: this command takes your current branch, and checks to see whether it connects to a tracking branch for a remote repository. If so, your changes are taken from your branch and pushed to the remote branch. This is how code is shared with a remote repository. Think of it as a command to "make the remote branch resemble my local branch." This will fail if the remote branch has diverged from your local branch (i.e., if not all of the commits in the remote branch are in your local branch). When this happens, your local branch needs to be synchronized with the remote branch with `git pull` or with `git fetch` and `git merge`.`git fetch` again takes our current branch and checks to see if there is a tracking branch. If so, it looks for changes in the remote branch, and pulls them into the tracking branch. It does not change your local branch. To do that, you'll need to enter `git merge origin/master` (for the "master" branch) to merge those changes into your branch - probably also called "master".`git pull` simply runs `git fetch` followed by `git merge`. This is often what we desire to do, but some people prefer to use git fetch followed by git merge to make sure they usee the changes they are merging into their branch before the merge happens.

