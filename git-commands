## Content

### What is the difference between push, pull, and fetch?

- `git push` - sends changes from your local branch to a remote repo
- `git fetch` - gets changes from a remote repo into your tracking branch
- `git pull` - gets changes from a remote branch into your tracking branch and merges them into your local branch

The commands `git push` and `git pull` are often thought of as the same. This, however, isn't correct; `git push` does two things: it takes your current branch and checks to see whether it connects to a tracking branch for a remote repository. If it does, your local changes are pushed to the remote branch. This is how git shares local code with a remote repository. Think of it as a command to "make the remote branch resemble my local branch." This command will fail if the remote branch has diverged from your local branch (i.e., if not all of the commits in the remote branch are in your local branch). 

When this happens, your local branch needs to be synchronized with the remote branch with `git pull` or, alternatively, with `git fetch` and `git merge`. Running `git fetch`checks to see if your current branch connects to a tracking branch. If it does, the command looks for changes in the remote branch and pulls them into the tracking branch. It does not, however, change your local branch. To merge remote changes into your local branch, enter `git merge origin/master`.`git pull` runs `git fetch` followed by `git merge`, in one step. Some users prefer to run `git fetch` and then `git merge`, separately, to ensure they see the changes (i.e., `git fetch`) before merging (i.e., `git merge`). 

