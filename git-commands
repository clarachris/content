## Content

### What is the difference between push, pull, and fetch?

- `git push` - sends changes from your local branch to a remote repo
- `git fetch` - sends changes from a remote repo into your tracking branch
- `git pull` - sends changes from a remote branch into your tracking branch and merges them into your local branch

Git users often think that `git push` and `git pull` are equivalent. However, this is not correct: `git pull` contains two actions, whereas `git push` contains one action. The command `git push` checks whether your current branch connects to a tracking branch for a remote repository. If it does, your current branch's changes are pushed to the remote branch. This is how code is shared with a remote repository. If, however, the remote branch has diverged from your local branch, `git push` will fail. When this happens, your local branch needs to be synchronized with the remote branch. This can be done using `git pull` alone or by using `git fetch` and then `git merge`.`git fetch` again takes our current branch, and checks to see if there is a tracking branch. If so, it looks for changes in the remote branch, and pulls them into the tracking branch. It does not change your local branch. To do that, you'll need to do `git merge origin/master` (for the "master" branch) to merge those changes into your branch - probably also called "master".`git pull` simply does a `git fetch` followed immediately by `git merge`. This is often what we desire to do, but some people prefer to use git fetch followed by git merge to make sure they understand the changes they are merging into their branch before the merge happens.

